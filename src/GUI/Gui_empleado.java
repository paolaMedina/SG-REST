/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

//GUI funcionando full
package GUI;

import Clases.*;
import Controladores.*;
import Controladores.exceptions.IllegalOrphanException;
import Controladores.exceptions.NonexistentEntityException;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.*;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Paola
 */
public class Gui_empleado extends javax.swing.JFrame {

    //GUI de la ventana principal del gerente
    Gui_VentanaPrincipalGerente gui_gerente = null;
    File foto;
    
    Date fechaInicio;
    Date fechaFinal;
    Horarios HorarioSeleccionado;
    Gui_ElegirHorario elegirHorario = null;
   
    
    public Gui_empleado(Gui_VentanaPrincipalGerente principal) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.gui_gerente = principal;        
        
        botones();
        deshabilitar();
    }
    

   public String copiarImagen(){
        FileInputStream in = null;
        String ruta=null;
        try {
            File inFile = new File(foto.toString());
            ruta="Empleados/"+jTextFieldIdentificacion.getText()+".png";
            File outFile = new File(ruta);
            in = new FileInputStream(inFile);
            FileOutputStream out = new FileOutputStream(outFile);
            int c;
            while( (c = in.read() ) != -1)
                out.write(c);
            in.close();
            out.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Gui_producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Gui_producto.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                in.close();
            } catch (IOException ex) {
                Logger.getLogger(Gui_producto.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        return ruta;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldApellidos = new javax.swing.JTextField();
        jComboBoxCargo = new javax.swing.JComboBox();
        jTextFieldTelefono = new javax.swing.JTextField();
        jTextFieldCelular = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jTextFieldDireccion = new javax.swing.JTextField();
        jComboBoxEstado = new javax.swing.JComboBox();
        jLabelFoto = new javax.swing.JLabel();
        jButtonSeleccionarFoto = new javax.swing.JButton();
        jTextFieldIdentificacion = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldContraseña = new javax.swing.JTextField();
        jButtonHorario = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButtonBuscar = new javax.swing.JButton();
        jButtonagregar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonNuevo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de Empleados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(51, 0, 255)));

        jLabel1.setText("Identificación:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Apellidos:");

        jLabel4.setText("Cargo:");

        jLabel5.setText("Estado");

        jLabel6.setText("Telefono:");

        jLabel7.setText("E_mail:");

        jTextFieldNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNombreKeyTyped(evt);
            }
        });

        jTextFieldApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldApellidosKeyTyped(evt);
            }
        });

        jComboBoxCargo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione...", "Gerente", "Cajero", "Mesero" }));

        jTextFieldTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldTelefonoKeyTyped(evt);
            }
        });

        jTextFieldCelular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldCelularKeyTyped(evt);
            }
        });

        jLabel8.setText("Celular:");

        jLabel9.setText("Direccion:");

        jComboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione...", "Activo", "Inactivo" }));

        jLabelFoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButtonSeleccionarFoto.setText("Seleccionar Imagen");
        jButtonSeleccionarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeleccionarFotoActionPerformed(evt);
            }
        });

        jTextFieldIdentificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdentificacionActionPerformed(evt);
            }
        });

        jLabel10.setText("Contraseña");

        jTextFieldContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldContraseñaActionPerformed(evt);
            }
        });

        jButtonHorario.setText("Fijar Horario");
        jButtonHorario.setEnabled(false);
        jButtonHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHorarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextFieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel4))
                                        .addGap(35, 35, 35)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBoxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonHorario))))
                        .addGap(14, 14, 14))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSeleccionarFoto))
                .addGap(37, 37, 37))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSeleccionarFoto)
                    .addComponent(jButtonHorario))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIdentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jComboBoxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/16 (Search).jpg"))); // NOI18N
        jButtonBuscar.setText("buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButtonagregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/16 (Save).jpg"))); // NOI18N
        jButtonagregar.setText("agregar");
        jButtonagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonagregarActionPerformed(evt);
            }
        });

        jButtonModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/16 (User edit).jpg"))); // NOI18N
        jButtonModificar.setText("modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/16 (Delete).jpg"))); // NOI18N
        jButtonSalir.setText("salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jButtonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/16 (User delete).jpg"))); // NOI18N
        jButtonEliminar.setText("eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Wzdelete.jpg"))); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/16 (User add).jpg"))); // NOI18N
        jButtonNuevo.setText("nuevo");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonagregar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jButtonCancelar)
                        .addGap(52, 52, 52)
                        .addComponent(jButtonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNuevo)
                    .addComponent(jButtonagregar)
                    .addComponent(jButtonBuscar)
                    .addComponent(jButtonModificar)
                    .addComponent(jButtonEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSalir)
                    .addComponent(jButtonCancelar))
                .addGap(155, 155, 155))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(567, 567, 567))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreKeyTyped
        // TODO add your handling code here:
        char car=evt.getKeyChar();
        if((car<'a' || car>'z') && (car<'A' || car>'Z')&&(car<' '||car>' ')) evt.consume();

    }//GEN-LAST:event_jTextFieldNombreKeyTyped

    private void jTextFieldApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldApellidosKeyTyped
        char car=evt.getKeyChar();
        if((car<'a' || car>'z') && (car<'A' || car>'Z')&&(car<' '||car>' ')) evt.consume();

        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldApellidosKeyTyped

    private void jTextFieldTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTelefonoKeyTyped
        // TODO add your handling code here:
        char car=evt.getKeyChar();
        if(  jTextFieldTelefono.getText().length()>=9)evt.consume();
        if ((car<'0'||car>'9'))evt.consume();
    }//GEN-LAST:event_jTextFieldTelefonoKeyTyped

    private void jTextFieldCelularKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCelularKeyTyped
        // TODO add your handling code here:
        char car=evt.getKeyChar();
        if(  jTextFieldCelular.getText().length()>=11)evt.consume();
        if((car<'0' || car>'9') ) evt.consume();
    }//GEN-LAST:event_jTextFieldCelularKeyTyped

    private void jButtonSeleccionarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeleccionarFotoActionPerformed
        // TODO add your handling code here:
        int resultado;
        Cargar_imagen ventana = new Cargar_imagen();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPG y PNG","jpg","png");

        ventana.jFileChooserCargarImagen.setFileFilter(filtro);

        resultado= ventana.jFileChooserCargarImagen.showOpenDialog(null);


        if (JFileChooser.APPROVE_OPTION == resultado){


                foto = ventana.jFileChooserCargarImagen.getSelectedFile();

                try{

                       ImageIcon icon = new ImageIcon(foto.toString());
                       Icon icono = new ImageIcon(icon.getImage().getScaledInstance(jLabelFoto.getWidth(), jLabelFoto.getHeight(), Image.SCALE_DEFAULT));
                       jLabelFoto.setText(null);
                       jLabelFoto.setIcon( icono );


                }catch(Exception ex){
                    JOptionPane.showMessageDialog(null, "Error abriendo la imagen "+ ex);

                }

         }
    }//GEN-LAST:event_jButtonSeleccionarFotoActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        String id = JOptionPane.showInputDialog(null, "Ingrese la identificacion del empleado que desea buscar", "Buscar", JOptionPane.QUESTION_MESSAGE);

        //Se crea en EntityManagerFactory con el nombre de nuestra unidad de persistencia
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("SG-RESTPU");
        
        //se crea el controlador del empleado y del ususario asociaro
        EmpleadoJpaController daoEmpleado = new EmpleadoJpaController(emf);
        
        try{
            Empleado empleado = daoEmpleado.findEmpleado(id);
           
            //llenar campos con los datos del empleado
            jTextFieldNombre.setText(empleado.getNombre());
            jTextFieldIdentificacion.setText(id);
            jTextFieldApellidos.setText(empleado.getApelllido());
            jTextFieldTelefono.setText(empleado.getTelefonoFijo());
            jTextFieldCelular.setText(empleado.getTelefonoCelular());
            jTextFieldDireccion.setText(empleado.getDireccion());
            jTextFieldEmail.setText(empleado.getEmail());
            String contraseñaDesencriptada = daoEmpleado.desencriptar(empleado.getPassword());   
            
            jTextFieldContraseña.setText(contraseñaDesencriptada);


            //campos que son combobox 
            if (empleado.getCargo().getCargo().equalsIgnoreCase("Gerente")) {
                jComboBoxCargo.setSelectedIndex(1);
            }else if (empleado.getCargo().getCargo().equalsIgnoreCase("Cajero")) {
                jComboBoxCargo.setSelectedIndex(2);
            }else{
                jComboBoxCargo.setSelectedIndex(3);
            }

            if (empleado.getEstado() == true) {
                jComboBoxEstado.setSelectedIndex(1);
            }else{
                jComboBoxEstado.setSelectedIndex(2);
            }
            
            //cargar imagen
            ImageIcon icon = new ImageIcon("Empleados/"+jTextFieldIdentificacion.getText()+".png");
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(jLabelFoto.getWidth(), jLabelFoto.getHeight(), Image.SCALE_DEFAULT));
            jLabelFoto.setText(null);
            jLabelFoto.setIcon(icono);
                
            this.jButtonagregar.setEnabled(false);
            this.jButtonBuscar.setEnabled(false);
            this.jButtonModificar.setEnabled(true);
            this.jButtonEliminar.setEnabled(false);
            this.jButtonNuevo.setEnabled(false);
            this.jButtonHorario.setEnabled(true);
            this.jButtonSeleccionarFoto.setEnabled(true);
            
            
            habilitar();
            this.jButtonSeleccionarFoto.setEnabled(true);
            jTextFieldIdentificacion.setEnabled(false);
            
            //datos del horario
            HorarioEmpleadoJpaController daoHorarioEmpleado = new HorarioEmpleadoJpaController(emf);
            List<HorarioEmpleado> horarioEmpList = daoHorarioEmpleado.findHorarioEmpleado(empleado.getIdentificacion());
            HorarioEmpleado horarioEmp = horarioEmpList.get(0);
            
            this.fechaInicio = horarioEmp.getFechaInicio();
            this.fechaFinal = horarioEmp.getFechaFin();
            this.HorarioSeleccionado = horarioEmp.getHorarios();
            
            
            
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "El empleado no existe", "Error", JOptionPane.ERROR_MESSAGE);

        }
        catch (Exception ex) {
                Logger.getLogger(Gui_empleado.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonagregarActionPerformed

        // Obtencion de datos de la interfaz
        String id=jTextFieldIdentificacion.getText(),nom=jTextFieldNombre.getText(),ape=jTextFieldApellidos.getText();
        String cargo=this.jComboBoxCargo.getSelectedItem().toString();
        int cargoId =0;
        if (cargo.equalsIgnoreCase("Gerente")) {
            cargoId = 1;
        }else if (cargo.equalsIgnoreCase("Cajero")) {
            cargoId = 2;
        }else{
            cargoId = 3;
        }
        String dni=jComboBoxEstado.getSelectedItem().toString();
        boolean estado = true;
        if (dni.equalsIgnoreCase("activo")) {
            estado = true;
        }else{
            estado = false;
        }
        String tel=jTextFieldTelefono.getText(),cel=jTextFieldCelular.getText(),emil=jTextFieldEmail.getText();
        String dir=jTextFieldDireccion.getText();
        String contraseña = jTextFieldContraseña.getText();
        
        //Se crea en EntityManagerFactory con el nombre de nuestra unidad de persistencia
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("SG-RESTPU");
        
        //Se crea el controlador del cargo_empleado
        CargoEmpleadoJpaController daoCargoEmpleado = new CargoEmpleadoJpaController(emf);
        CargoEmpleado cargoEmpleado = daoCargoEmpleado.findCargoEmpleado(cargoId);
        
        //se crea el controlador del empleado y del ususario asociaro
        EmpleadoJpaController daoEmpleado = new EmpleadoJpaController(emf);
        
        String contraseñaEncriptada=daoEmpleado.encriptar(contraseña);
        //se crea un objeto empleado y se le asignan sus atributos
        Empleado empleado = new Empleado();
        empleado.setIdentificacion(id);
        empleado.setPassword(contraseñaEncriptada);
        empleado.setNombre(nom);
        empleado.setApelllido(ape);
        empleado.setCargo(cargoEmpleado);
        empleado.setEstado(estado);
        empleado.setDireccion(dir);
        empleado.setTelefonoFijo(tel);
        empleado.setTelefonoCelular(cel);
        empleado.setEmail(emil);
        empleado.setFoto(copiarImagen());
        
        //se crea un HorarioEmpleado
        HorarioEmpleadoJpaController daoHorarioEmpleado = new HorarioEmpleadoJpaController(emf);
        
        HorarioEmpleado horarioEmpleado = new HorarioEmpleado();
        horarioEmpleado.setEmpleado(empleado);
        
        System.err.println("");
        try {
            if (verificarCamposVacios() == false) {
                horarioEmpleado.setFechaFin(this.elegirHorario.fechaFinal);
                horarioEmpleado.setFechaInicio(this.elegirHorario.fechaInicio);
                horarioEmpleado.setHorarios(this.elegirHorario.HorarioSeleccionado);
                daoEmpleado.create(empleado);
                daoHorarioEmpleado.create(horarioEmpleado);
                botones();
                limpiar();
                JOptionPane.showMessageDialog(null, "El empleado se agrego exitosamente", "Exito!", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "Llene los datos obligatorios", "Error", JOptionPane.ERROR_MESSAGE);
                limpiar();
            }
            
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Llene los datos obligatorios", "Error", JOptionPane.ERROR_MESSAGE);
            limpiar();
        } catch (Exception ex) {
            Logger.getLogger(Gui_empleado.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_jButtonagregarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        
        // Obtencion de datos de la interfaz
        String id=jTextFieldIdentificacion.getText(),nom=jTextFieldNombre.getText(),ape=jTextFieldApellidos.getText();
        String cargo=this.jComboBoxCargo.getSelectedItem().toString();
        int cargoId =0;
        if (cargo.equalsIgnoreCase("Gerente")) {
            cargoId = 1;
        }else if (cargo.equalsIgnoreCase("Mesero")) {
            cargoId = 2;
        }else{
            cargoId = 3;
        }
        String dni=jComboBoxEstado.getSelectedItem().toString();
        boolean estado = true;
        if (dni.equalsIgnoreCase("activo")) {
            estado = true;
        }else{
            estado = false;
        }
        String tel=jTextFieldTelefono.getText(),cel=jTextFieldCelular.getText(),emil=jTextFieldEmail.getText();
        String dir=jTextFieldDireccion.getText();
        String contraseña = jTextFieldContraseña.getText();
        
        //Se crea en EntityManagerFactory con el nombre de nuestra unidad de persistencia
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("SG-RESTPU");
        
        //Se crea el controlador del cargo_empleado
        CargoEmpleadoJpaController daoCargoEmpleado = new CargoEmpleadoJpaController(emf);
        CargoEmpleado cargoEmpleado = daoCargoEmpleado.findCargoEmpleado(cargoId);
        
        //se crea el controlador del empleado y del ususario asociaro
        EmpleadoJpaController daoEmpleado = new EmpleadoJpaController(emf);
        String contraseñaEncriptada=daoEmpleado.encriptar(contraseña);
        
        //se crea un objeto empleado y se le asignan sus atributos
        Empleado empleado = new Empleado();
        empleado.setIdentificacion(id);
        empleado.setPassword(contraseñaEncriptada);
        empleado.setNombre(nom);
        empleado.setApelllido(ape);
        empleado.setCargo(cargoEmpleado);
        empleado.setEstado(estado);
        empleado.setDireccion(dir);
        empleado.setTelefonoFijo(tel);
        empleado.setTelefonoCelular(cel);
        empleado.setEmail(emil);
        empleado.setFoto(copiarImagen());
        
        //se crea un HorarioEmpleado
        HorarioEmpleadoJpaController daoHorarioEmpleado = new HorarioEmpleadoJpaController(emf);
        
        HorarioEmpleado horarioEmpleado = new HorarioEmpleado();
        horarioEmpleado.setEmpleado(empleado);
        
        System.err.println("");
        try {
            if (verificarCamposVacios() == false) {
                if (elegirHorario == null) {
                    daoEmpleado.edit(empleado);
                    botones();
                    limpiar();
                    JOptionPane.showMessageDialog(null, "El empleado se edito exitosamente", "Exito!", JOptionPane.INFORMATION_MESSAGE);
            
                }else{
                    horarioEmpleado.setFechaFin(this.elegirHorario.fechaFinal);
                    horarioEmpleado.setFechaInicio(this.elegirHorario.fechaInicio);
                    horarioEmpleado.setHorarios(this.elegirHorario.HorarioSeleccionado);
                    daoEmpleado.edit(empleado);
                    daoHorarioEmpleado.edit(horarioEmpleado);
                    botones();
                    limpiar();
                    JOptionPane.showMessageDialog(null, "El empleado se edito exitosamente", "Exito!", JOptionPane.INFORMATION_MESSAGE);
            
                }

            }else{
                JOptionPane.showMessageDialog(null, "Llene los datos obligatorios", "Error", JOptionPane.ERROR_MESSAGE);
                botones();
                    limpiar();
            }
            
        }  catch (Exception ex) {
            Logger.getLogger(Gui_empleado.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
         try{
         this.gui_gerente.setVisible(true);
         this.dispose();
       }catch(Exception e){}

    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        String id = JOptionPane.showInputDialog(null, "Ingrese la identificacion del empleado que desea eliminar", "Eliminar", JOptionPane.QUESTION_MESSAGE);

        //Se crea en EntityManagerFactory con el nombre de nuestra unidad de persistencia
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("SG-RESTPU");
        
        //se crea el controlador del empleado y del ususario asociaro
        EmpleadoJpaController daoEmpleado = new EmpleadoJpaController(emf);
        
        //se crea el controlador para el horario asociado a un empleado
        HorarioEmpleadoJpaController daoHorarioEmpleado = new HorarioEmpleadoJpaController(emf);
            
        try {
            List<HorarioEmpleado> he = daoHorarioEmpleado.findHorarioEmpleado(id);
            HorarioEmpleado he1 = he.get(0);
            
            daoHorarioEmpleado.destroy(he1.getHorarioEmpleadoPK());
            daoEmpleado.destroy(id);
            JOptionPane.showMessageDialog(null, "El empleado se elimino exitosamente", "Exito!", JOptionPane.INFORMATION_MESSAGE);
        } catch (IllegalOrphanException ex) {
            Logger.getLogger(Gui_empleado.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NonexistentEntityException ex) {
            JOptionPane.showMessageDialog(null, "El empleado que desea eliminar no existe", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        limpiar();
        habilitar();
        deshabilitar();
        habilitarBotones();
        this.jButtonSeleccionarFoto.setEnabled(false);
        
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed

        habilitar();
        limpiar();
        this.jButtonagregar.setEnabled(true);
        this.jButtonBuscar.setEnabled(false);
        this.jButtonModificar.setEnabled(false);
        this.jButtonEliminar.setEnabled(false);
        this.jButtonNuevo.setEnabled(false);
        this.jButtonSeleccionarFoto.setEnabled(true);
        this.jButtonHorario.setEnabled(true);
        jButtonSeleccionarFoto.setEnabled(true);

    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jTextFieldIdentificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdentificacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdentificacionActionPerformed

    private void jTextFieldContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldContraseñaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldContraseñaActionPerformed

    private void jButtonHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHorarioActionPerformed
        this.elegirHorario = new Gui_ElegirHorario(HorarioSeleccionado, fechaInicio, fechaFinal);
        elegirHorario.setVisible(true);

    }//GEN-LAST:event_jButtonHorarioActionPerformed

       public void botones(){
        this.jButtonagregar.setEnabled(false);
        this.jButtonNuevo.setEnabled(true);
        this.jButtonBuscar.setEnabled(true);
        this.jButtonModificar.setEnabled(false);
        this.jButtonEliminar.setEnabled(true);
        this.jButtonSeleccionarFoto.setEnabled(false);
        this.jButtonHorario.setEnabled(false);
        
     }
     
     public void habilitarBotones(){
        this.jButtonBuscar.setEnabled(true);
        this.jButtonModificar.setEnabled(false);
        this.jButtonEliminar.setEnabled(true);
        this.jButtonNuevo.setEnabled(true);
        this.jButtonagregar.setEnabled(false);
        
     }
     public void limpiar(){
         this.jTextFieldIdentificacion.setText("");
         this.jTextFieldNombre.setText("");
         this.jTextFieldApellidos.setText(""); 
         this.jComboBoxCargo.setSelectedIndex(0);
         this.jComboBoxEstado.setSelectedIndex(0);
         this.jTextFieldTelefono.setText("");
         this.jTextFieldCelular.setText("");
         this.jTextFieldEmail.setText("");
         this.jTextFieldContraseña.setText("");
         jTextFieldDireccion.setText("");
         jLabelFoto.setIcon(null);
         
     }
     
     public void habilitar(){
         this.jTextFieldIdentificacion.setEnabled(true);
         this.jTextFieldNombre.setEnabled(true);
         this.jTextFieldApellidos.setEnabled(true);
         this.jComboBoxCargo.setEnabled(true);
         this.jComboBoxEstado.setEnabled(true);
         this.jTextFieldTelefono.setEnabled(true);
         this.jTextFieldCelular.setEnabled(true);
         this.jTextFieldEmail.setEnabled(true);
         this.jTextFieldContraseña.setEnabled(true);
         jTextFieldDireccion.setEnabled(true);
         jButtonSeleccionarFoto.setEnabled(true);
         jButtonSeleccionarFoto.setEnabled(false);
  }
     public void deshabilitar(){
         this.jTextFieldIdentificacion.setEnabled(false);
         this.jTextFieldNombre.setEnabled(false);
         this.jTextFieldApellidos.setEnabled(false); 
         this.jComboBoxCargo.setEnabled(false);
         this.jComboBoxEstado.setEnabled(false);
         this.jTextFieldTelefono.setEnabled(false);
         this.jTextFieldCelular.setEnabled(false);
         this.jTextFieldEmail.setEnabled(false);
         jTextFieldDireccion.setEnabled(false);
         this.jTextFieldContraseña.setEnabled(false);
     }
     
     public boolean verificarCamposVacios(){
         boolean var =false;
         
         if (jTextFieldIdentificacion.getText().equalsIgnoreCase("") || jTextFieldNombre.getText().equalsIgnoreCase("") ||
                 jTextFieldApellidos.getText().equalsIgnoreCase("") || jComboBoxCargo.getSelectedItem().toString().equalsIgnoreCase("Seleccione...") ||
                 jComboBoxEstado.getSelectedItem().toString().equalsIgnoreCase("Seleccione...") || jTextFieldContraseña.getText().equalsIgnoreCase("")) {
             
             var = true;             
         }
         
         return var;
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui_empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui_empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui_empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui_empleado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui_empleado(new Gui_VentanaPrincipalGerente(new Gui_login())).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonHorario;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonSeleccionarFoto;
    private javax.swing.JButton jButtonagregar;
    private javax.swing.JComboBox jComboBoxCargo;
    private javax.swing.JComboBox jComboBoxEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelFoto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextFieldApellidos;
    private javax.swing.JTextField jTextFieldCelular;
    private javax.swing.JTextField jTextFieldContraseña;
    private javax.swing.JTextField jTextFieldDireccion;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldIdentificacion;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldTelefono;
    // End of variables declaration//GEN-END:variables
}
